{"version":3,"file":"CameraModule.js","sourceRoot":"","sources":["../../src/CameraModule/CameraModule.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\n\nimport { PictureOptions } from '../Camera.types';\nimport {\n  CameraType,\n  CapturedPicture,\n  CaptureOptions,\n  BarCodeSettings,\n  ImageType,\n} from './CameraModule.types';\nimport * as Utils from './CameraUtils';\nimport { FacingModeToCameraType, PictureSizes } from './constants';\nimport * as CapabilityUtils from './CapabilityUtils';\n\nimport { WebWorker } from './barcode/WorkerUtils';\n\nimport BarcodeScannerWorker from './barcode/BarcodeScannerWorker.js';\n\nexport { ImageType, CameraType, CaptureOptions };\n\n/*\n * TODO: Bacon: Add more props for Android\n *\n * aspectRatio: { min (0.00033), max (4032) }\n * colorTemperature: MediaSettingsRange  (max: 7000, min: 2850, step: 50)\n * exposureCompensation: MediaSettingsRange (max: 2, min: -2, step: 0.1666666716337204)\n * exposureMode: 'continuous' | 'manual'\n * frameRate: { min: (1), max: (60) }\n * iso: MediaSettingsRange (max: 3200, min: 50, step: 1)\n * width: { min: 1, max}\n * height: { min: 1, max}\n */\n\ntype OnCameraReadyListener = () => void;\ntype OnMountErrorListener = ({ nativeEvent: Error }) => void;\n\nclass CameraModule {\n  videoElement: HTMLVideoElement;\n  stream: MediaStream | null = null;\n  settings: MediaTrackSettings | null = null;\n  onCameraReady: OnCameraReadyListener = () => {};\n  onMountError: OnMountErrorListener = () => {};\n\n  private _pictureSize?: string;\n  private _isStartingCamera = false;\n  private _autoFocus: string = 'continuous';\n  private _flashMode: string = 'off';\n  private _whiteBalance: string = 'continuous';\n  private _cameraType: CameraType = CameraType.front;\n  private _zoom: number = 1;\n\n  private webWorker?: WebWorker;\n  private barcodeLoop?: NodeJS.Timeout;\n\n  get autoFocus(): string {\n    return this._autoFocus;\n  }\n\n  async setAutoFocusAsync(value: string): Promise<void> {\n    if (value === this.autoFocus) {\n      return;\n    }\n    this._autoFocus = value;\n    await this._syncTrackCapabilities();\n  }\n\n  get flashMode(): string {\n    return this._flashMode;\n  }\n\n  async setFlashModeAsync(value: string): Promise<void> {\n    if (value === this.flashMode) {\n      return;\n    }\n    this._flashMode = value;\n    await this._syncTrackCapabilities();\n  }\n\n  get whiteBalance(): string {\n    return this._whiteBalance;\n  }\n\n  async setWhiteBalanceAsync(value: string): Promise<void> {\n    if (value === this.whiteBalance) {\n      return;\n    }\n    this._whiteBalance = value;\n    await this._syncTrackCapabilities();\n  }\n\n  get type(): CameraType {\n    return this._cameraType;\n  }\n\n  async setTypeAsync(value: CameraType) {\n    if (value === this._cameraType) {\n      return;\n    }\n    this._cameraType = value;\n    await this.resumePreview();\n  }\n\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  async setZoomAsync(value: number): Promise<void> {\n    if (value === this.zoom) {\n      return;\n    }\n    //TODO: Bacon: IMP on non-android devices\n    this._zoom = value;\n    await this._syncTrackCapabilities();\n  }\n\n  constructor(videoElement: HTMLVideoElement) {\n    this.videoElement = videoElement;\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this._syncTrackCapabilities();\n      });\n    }\n  }\n\n  setPictureSize(value: string) {\n    if (value === this._pictureSize) {\n      return;\n    }\n    invariant(\n      PictureSizes.includes(value),\n      `expo-camera: CameraModule.setPictureSize(): invalid size supplied ${value}, expected one of: ${PictureSizes.join(\n        ', '\n      )}`\n    );\n\n    const [width, height] = value.split('x');\n    //TODO: Bacon: IMP\n    const aspectRatio = parseFloat(width) / parseFloat(height);\n\n    this._pictureSize = value;\n  }\n\n  async onCapabilitiesReady(track: MediaStreamTrack): Promise<void> {\n    const capabilities = track.getCapabilities() as any;\n\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints: {\n      zoom?: number;\n      torch?: boolean;\n      whiteBalance?: string;\n      focusMode?: string;\n    } = {};\n\n    if (capabilities.zoom) {\n      // TODO: Bacon: We should have some async method for getting the (min, max, step) externally\n      const { min, max } = capabilities.zoom;\n      constraints.zoom = Math.min(max, Math.max(min, this._zoom));\n    }\n    if (capabilities.focusMode) {\n      constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(this.autoFocus);\n    }\n    if (capabilities.torch) {\n      constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(this.flashMode);\n    }\n    if (capabilities.whiteBalance) {\n      constraints.whiteBalance = this.whiteBalance;\n    }\n\n    await track.applyConstraints({ advanced: [constraints] as any });\n  }\n\n  private async _syncTrackCapabilities(): Promise<void> {\n    if (this.stream) {\n      await Promise.all(this.stream.getTracks().map(track => this.onCapabilitiesReady(track)));\n    }\n  }\n\n  setVideoSource(stream: MediaStream | MediaSource | Blob | null): void {\n    if ('srcObject' in this.videoElement) {\n      this.videoElement.srcObject = stream;\n    } else {\n      // TODO: Bacon: Check if needed\n      (this.videoElement['src'] as any) = window.URL.createObjectURL(stream);\n    }\n  }\n\n  setSettings(stream: MediaStream | null): void {\n    this.settings = null;\n    if (stream && this.stream) {\n      this.settings = this.stream.getTracks()[0].getSettings();\n    }\n  }\n\n  setStream(stream: MediaStream | null): void {\n    this.stream = stream;\n    this.setSettings(stream);\n    this.setVideoSource(stream);\n  }\n\n  getActualCameraType(): CameraType | null {\n    if (this.settings) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n\n  async ensureCameraIsRunningAsync(): Promise<void> {\n    if (!this.stream) {\n      await this.resumePreview();\n    }\n  }\n\n  async resumePreview(): Promise<MediaStream | null> {\n    if (this._isStartingCamera) {\n      return null;\n    }\n    this._isStartingCamera = true;\n    try {\n      this.pausePreview();\n      const stream = await Utils.getStreamDevice(this.type);\n      this.setStream(stream);\n      this._isStartingCamera = false;\n      this.onCameraReady();\n      return stream;\n    } catch (error) {\n      this._isStartingCamera = false;\n      this.onMountError({ nativeEvent: error });\n    }\n    return null;\n  }\n\n  startScanner(settings: BarCodeSettings, callback: (results: any) => void) {\n    if (this.webWorker) {\n      this.stopScanner();\n    }\n    // Initiate web worker execute handler according to mode.\n    this.webWorker = new WebWorker(BarcodeScannerWorker);\n\n    this.webWorker.onmessage = event => {\n      if (callback && this.webWorker) {\n        if (event && Array.isArray(event.data)) {\n          for (const result of event.data) {\n            callback(result);\n          }\n        }\n        // If interval is 0 then only scan once.\n        if (settings.interval) {\n          // @ts-ignore\n          this.barcodeLoop = setTimeout(() => {\n            this.scanForBarcodes(settings.barCodeTypes);\n          }, settings.interval);\n        }\n        return;\n      }\n\n      this.stopScanner();\n    };\n\n    // Invoke the initial scan\n    this.scanForBarcodes(settings.barCodeTypes);\n  }\n\n  stopScanner() {\n    // Stop web-worker and clear the component\n    if (this.webWorker) {\n      this.webWorker.terminate();\n      this.webWorker = undefined;\n    }\n\n    // @ts-ignore\n    clearTimeout(this.barcodeLoop);\n  }\n\n  private scanForBarcodes(types: string[], config: PictureOptions = {}) {\n    if (!this.webWorker)\n      throw new Error('Cannot process a barcode before the worker has been created.');\n    const image = Utils.captureImageData(this.videoElement, config);\n    this.invokeWorker({ image, types });\n  }\n\n  private invokeWorker(payload: any) {\n    if (!this.webWorker || !payload) return;\n    this.webWorker.postMessage({ module: 'expo-barcode-scanner', payload });\n  }\n\n  takePicture(config: PictureOptions): CapturedPicture {\n    const base64 = Utils.captureImage(this.videoElement, config);\n\n    const capturedPicture: CapturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n    };\n\n    if (this.settings) {\n      const { width = 0, height = 0 } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      // TODO: Bacon: verify/enforce exif shape.\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({ nativeEvent: { data: capturedPicture, id: config.id } });\n    }\n    return capturedPicture;\n  }\n\n  pausePreview(): void {\n    if (!this.stream) {\n      return;\n    }\n    this.stream.getTracks().forEach(track => track.stop());\n    this.setStream(null);\n  }\n\n  // TODO: Bacon: we don't even use ratio in native...\n  getAvailablePictureSizes = async (ratio: string): Promise<string[]> => {\n    return PictureSizes;\n  };\n\n  unmount() {\n    this.stopScanner();\n    this.settings = null;\n    this.stream = null;\n  }\n}\n\nexport default CameraModule;\n"]}