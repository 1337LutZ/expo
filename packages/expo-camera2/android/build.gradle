buildscript {
  repositories {
    google()
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.4.1'
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31'
  }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'kotlin-android'

group = 'host.exp.exponent'
version = '0.1.0'

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

// Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion 28

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "0.1.0"
  }
  lintOptions {
    abortOnError false
  }
  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }
}

apply from: project(':unimodules-core').file('../unimodules-core.gradle')

dependencies {
  unimodule 'unimodules-core'

  api "com.android.support:support-annotations:${safeExtGet("supportLibVersion", "28.0.0")}"
  api "com.android.support:collections:${safeExtGet("supportLibVersion", "28.0.0")}"

  api 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.41'
  api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
}
